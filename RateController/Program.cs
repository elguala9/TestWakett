using Microsoft.EntityFrameworkCore;
using Microsoft.OpenApi.Models;
using Rates.Infrastracture.Models.Rates;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(options =>
{
    options.SwaggerDoc("v1", new OpenApiInfo
    {
        Title = "Your API",
        Version = "v1",
        Description = "API documentation generated by Swagger",
        Contact = new OpenApiContact
        {
            Name = "Your Name",
            Email = "your.email@example.com"
        }
    });
});


builder.Services.AddDbContext<RatesContext>(options =>
    options.UseNpgsql(builder.Configuration.GetConnectionString("RatesDb")));

// Repositories
builder.Services.AddScoped<IRateRepository, RateRepository>();

// Services
builder.Services.AddScoped<IRatesService, RatesService>();

// HttpClient for CoinMarketCap
builder.Services.AddHttpClient(); // or AddHttpClient("CoinMarketCap")

// Controllers
builder.Services.AddControllers();

builder.Services.AddHttpClient();

var app = builder.Build();


app.UseSwagger();
app.UseSwaggerUI(options =>
{
    options.SwaggerEndpoint("/swagger/v1/swagger.json", "Your API v1");
    options.RoutePrefix = string.Empty; // Serve Swagger UI at application root
});


app.MapControllers();

app.Run();
