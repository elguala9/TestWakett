using Microsoft.EntityFrameworkCore;
using Microsoft.OpenApi.Models;
using Positions.Infrastracture.Models.Positions;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(options =>
{
    options.SwaggerDoc("v1", new OpenApiInfo
    {
        Title = "Your API",
        Version = "v1",
        Description = "API documentation generated by Swagger",
        Contact = new OpenApiContact
        {
            Name = "Your Name",
            Email = "your.email@example.com"
        }
    });
});

// DbContext
string connectionString = builder.Configuration.GetConnectionString("PositionsDb");
builder.Services.AddDbContext<PositionsContext>(options =>
    options.UseNpgsql(connectionString));

// Repositories
builder.Services.AddScoped<IPositionRepository, PositionRepository>();

// Services
builder.Services.AddScoped<IPositionsService, PositionsService>();

var app = builder.Build();

// Swagger sempre attivo (anche in produzione)
app.UseSwagger();
app.UseSwaggerUI(options =>
{
    options.SwaggerEndpoint("/swagger/v1/swagger.json", "Your API v1");
    options.RoutePrefix = string.Empty; // Swagger UI sulla root "/"
});


app.MapControllers();

app.Run();

public partial class Program { }
